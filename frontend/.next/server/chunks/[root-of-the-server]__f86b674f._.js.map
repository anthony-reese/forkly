{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n\r\n// Check if window is defined (for client-side rendering) and if Cypress is running\r\nif (typeof window !== 'undefined' && window.Cypress) {\r\n  // Now, TypeScript knows about `firebase_auth_instance` and `Cypress` on `window`\r\n  window.firebase_auth_instance = auth;\r\n  console.log('Firebase auth instance exposed to window for Cypress.');\r\n}\r\n\r\nexport const google = new GoogleAuthProvider();\r\nexport const db = getFirestore(app);"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,MAAM,MAAM,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,sLAAA,CAAA,gBAAa,AAAD,EAAE;AACrD,MAAM,OAAO,CAAA,GAAA,+MAAA,CAAA,UAAO,AAAD,EAAE;AAE5B,mFAAmF;AACnF,uCAAqD;;AAIrD;AAEO,MAAM,SAAS,IAAI,0NAAA,CAAA,qBAAkB;AACrC,MAAM,KAAK,CAAA,GAAA,mKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/lib/foursquareCached.ts"],"sourcesContent":["// src/lib/foursquareCached.ts\r\nimport { getDoc, doc, setDoc } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst TTL = 1000 * 60 * 60 * 24 * 7;\r\n\r\ninterface FoursquareIcon {\r\n  prefix: string;\r\n  suffix: string;\r\n}\r\n\r\ninterface FoursquareCategory {\r\n  id: string;\r\n  name: string;\r\n  icon?: FoursquareIcon;\r\n}\r\n\r\ninterface FoursquarePhoto {\r\n  id: string;\r\n  prefix: string;\r\n  suffix: string;\r\n}\r\n\r\nexport interface FoursquarePlaceDetails {\r\n  fsq_id: string;\r\n  name: string;\r\n  rating?: number;\r\n  price?: number;\r\n  categories?: FoursquareCategory[];\r\n  photos?: FoursquarePhoto[];\r\n}\r\n\r\ninterface CachedBusinessData {\r\n  id: string;\r\n  name: string;\r\n  rating: number;\r\n  price?: string;\r\n  category: string;\r\n  photoUrl?: string;\r\n  lastFetched: number;\r\n}\r\n\r\nexport interface Business {\r\n  id: string;\r\n  name: string;\r\n  rating: number;\r\n  price?: string;\r\n  category: string;\r\n  photoUrl?: string;\r\n}\r\n\r\nexport interface FoursquareErrorResponse {\r\n  message: string;\r\n}\r\n\r\n/**\r\n * Transforms a Foursquare Place API response object into your internal Business interface.\r\n * @param place The Foursquare Place details object.\r\n * @returns A Business object.\r\n */\r\nexport function transformFoursquarePlaceToBusiness(place: FoursquarePlaceDetails): Business {\r\n  const scaledRating = place.rating !== undefined && place.rating !== null ? (place.rating / 2) : 0;\r\n  const displayPrice = place.price ? '$'.repeat(place.price) : undefined;\r\n\r\n  const primaryCategory = place.categories && place.categories.length > 0\r\n    ? place.categories[0].name\r\n    : 'Uncategorized';\r\n\r\n  const photoUrl = place.photos && place.photos.length > 0\r\n    ? `${place.photos[0].prefix}original${place.photos[0].suffix}`\r\n    : (place.categories?.[0]?.icon\r\n      ? `${place.categories[0].icon.prefix}bg_64${place.categories[0].icon.suffix}`\r\n      : '/placeholder.png');\r\n\r\n  return {\r\n    id: place.fsq_id ?? uuidv4(),\r\n    name: place.name,\r\n    rating: scaledRating,\r\n    price: displayPrice,\r\n    category: primaryCategory,\r\n    photoUrl: photoUrl,\r\n  };\r\n}\r\n\r\n/**\r\n * Fetches business details from Firestore cache or Foursquare API.\r\n * Caches the result in Firestore if fetched from API.\r\n * @param id The Foursquare Place ID.\r\n * @returns A Promise that resolves to a Business object.\r\n */\r\nexport async function getBusinessCached(id: string): Promise<Business> {\r\n  const FOURSQUARE_API_KEY = process.env.FOURSQUARE_API_KEY;\r\n  if (!FOURSQUARE_API_KEY) {\r\n    console.error('FOURSQUARE_API_KEY is not set in environment variables.');\r\n    throw new Error('Server API key not configured for Foursquare.');\r\n  }\r\n\r\n  const ref = doc(db, 'restaurants', id);\r\n  const snap = await getDoc(ref);\r\n\r\n  if (snap.exists()) {\r\n    const data = snap.data() as CachedBusinessData;\r\n    if (data.lastFetched && (Date.now() - data.lastFetched < TTL)) {\r\n      console.log(`[Firebase Cache Hit] Returning business ${id} from cache.`);\r\n      return data as Business;\r\n    }\r\n  }\r\n\r\n  console.log(`[Firebase Cache Miss/Stale] Fetching business ${id} from Foursquare.`);\r\n  const url = `https://places-api.foursquare.com/places/${id}`;\r\n\r\n  try {\r\n    const res = await fetch(url, {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${FOURSQUARE_API_KEY}`,\r\n        'X-Places-Api-Version': '2025-06-17',\r\n      },\r\n    });\r\n\r\n    if (!res.ok) {\r\n      const errorJson = (await res.json()) as FoursquareErrorResponse;\r\n      console.error('Foursquare API Business Details Error Response:', errorJson);\r\n      const errorMessage = errorJson.message || `Unknown Foursquare API error (Status: ${res.status})`;\r\n      throw new Error(`Foursquare API Error: ${errorMessage}`);\r\n    }\r\n\r\n    const json = (await res.json()) as FoursquarePlaceDetails;\r\n\r\n    const transformedBusiness = transformFoursquarePlaceToBusiness(json);\r\n    await setDoc(ref, { ...transformedBusiness, lastFetched: Date.now() } as CachedBusinessData);\r\n    console.log(`[Firebase Cache Set] Business ${id} cached.`);\r\n    return transformedBusiness;\r\n  } catch (error: unknown) {\r\n    console.error(`Error fetching or transforming business ${id}:`, error);\r\n    const errorMessage = error instanceof Error ? error.message : String(error);\r\n    throw new Error(`Failed to fetch business details from Foursquare. Details: ${errorMessage}`);\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/app/api/search/route.ts"],"sourcesContent":["// src/app/api/search/route.ts\r\nimport { NextResponse } from 'next/server';\r\nimport {\r\n  Business,\r\n  FoursquarePlaceDetails,\r\n  FoursquareErrorResponse,\r\n  transformFoursquarePlaceToBusiness\r\n} from '@/lib/foursquareCached';\r\n\r\ninterface FoursquareSearchPlaceResult {\r\n  fsq_id: string;\r\n  name: string;\r\n  rating?: number;\r\n  price?: number;\r\n  categories?: { id: string; name: string; icon?: { prefix: string; suffix: string } }[];\r\n  photos?: { id: string; prefix: string; suffix: string }[];\r\n}\r\n\r\ninterface FoursquareSearchApiResponse {\r\n  results: FoursquareSearchPlaceResult[];\r\n}\r\n\r\nexport async function GET(req: Request) {\r\n  const { searchParams } = new URL(req.url);\r\n  const term = searchParams.get('term') ?? 'restaurants';\r\n  const location = searchParams.get('location');\r\n  const latitude = searchParams.get('latitude');\r\n  const longitude = searchParams.get('longitude');\r\n  const price = searchParams.get('price');\r\n  const categories = searchParams.get('categories');\r\n  const limit = searchParams.get('limit') ?? '10';\r\n  const offset = searchParams.get('offset') ?? '0';\r\n\r\n  if (!(latitude && longitude) && (!location || location.trim() === '')) {\r\n    return NextResponse.json(\r\n      { error: 'Need either location (text) or latitude+longitude for Foursquare search' },\r\n      { status: 400 },\r\n    );\r\n  }\r\n\r\n  const FOURSQUARE_API_KEY = process.env.FOURSQUARE_API_KEY;\r\n  if (!FOURSQUARE_API_KEY) {\r\n    console.error('FOURSQUARE_API_KEY is UNDEFINED on the server. Check .env.local and server restart.');\r\n    return NextResponse.json({ error: 'Server API key not configured' }, { status: 500 });\r\n  }\r\n\r\n  const url = new URL('https://places-api.foursquare.com/places/search');\r\n  url.searchParams.set('query', term);\r\n  url.searchParams.set('limit', limit);\r\n  url.searchParams.set('offset', offset);\r\n\r\n  if (latitude && longitude) {\r\n    url.searchParams.set('ll', `${latitude},${longitude}`);\r\n  } else {\r\n    url.searchParams.set('near', location!);\r\n  }\r\n\r\n  if (price) url.searchParams.set('min_price', price);\r\n  if (price) url.searchParams.set('max_price', price);\r\n  if (categories) url.searchParams.set('categories', categories);\r\n\r\n  try {\r\n    const res = await fetch(url.toString(), {\r\n      method: 'GET',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        Authorization: `Bearer ${FOURSQUARE_API_KEY}`,\r\n        'X-Places-Api-Version': '2025-06-17',\r\n      },\r\n    });\r\n\r\n    if (!res.ok) {\r\n      const errorJson = (await res.json()) as FoursquareErrorResponse;\r\n      console.error('Foursquare API Error Response:', errorJson);\r\n      const errorMessage = errorJson.message || 'Unknown Foursquare API error';\r\n      return NextResponse.json(\r\n        { error: `Foursquare API Error: ${errorMessage}` },\r\n        { status: res.status }\r\n      );\r\n    }\r\n\r\n    const json = (await res.json()) as FoursquareSearchApiResponse;\r\n\r\n    if (!json.results || !Array.isArray(json.results)) {\r\n      console.error('Foursquare API response is missing \"results\" array or it is not an array:', json);\r\n      return NextResponse.json(\r\n        { error: 'Foursquare API returned an unexpected response format.' },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    const businesses: Business[] = json.results.map((placeResult: FoursquareSearchPlaceResult) => {\r\n      return transformFoursquarePlaceToBusiness(placeResult as FoursquarePlaceDetails);\r\n    });\r\n\r\n    return NextResponse.json({ businesses });\r\n\r\n  } catch (err: unknown) {\r\n    console.error('Error in Foursquare API search route:', err);\r\n    const errorMessage = err instanceof Error ? err.message : String(err);\r\n    return NextResponse.json(\r\n      { error: `Failed to fetch places from Foursquare. Details: ${errorMessage}` },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}