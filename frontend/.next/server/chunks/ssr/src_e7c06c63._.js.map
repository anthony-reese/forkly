{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/hooks/useGeoPosition.ts"],"sourcesContent":["// src/hooks/useGeoPosition.ts\r\nimport { useState } from 'react';\r\n\r\n// Define a custom error class for geolocation errors\r\nclass GeolocationServiceError extends Error {\r\n  code: number; // Corresponds to GeolocationPositionError.code\r\n\r\n  constructor(message: string, code: number) {\r\n    super(message);\r\n    this.name = 'GeolocationServiceError'; // Set a distinct name for the error\r\n    this.code = code;\r\n    // Set the prototype explicitly. This is important for instanceof checks to work correctly in some environments.\r\n    Object.setPrototypeOf(this, GeolocationServiceError.prototype);\r\n  }\r\n}\r\n\r\nexport function useGeoPosition() {\r\n  const [coords, setCoords] = useState<GeolocationCoordinates | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  async function request() {\r\n    setError(null); // Clear any previous errors when a new request is made\r\n    setCoords(null); // Clear any previous coordinates as well\r\n\r\n    if (!navigator.geolocation) {\r\n      setError('Geolocation not supported by your browser.');\r\n      return; // Exit if geolocation is not supported\r\n    }\r\n\r\n    try {\r\n      // Wrap the callback-based getCurrentPosition in a Promise\r\n      const position = await new Promise<GeolocationPosition>((resolve, reject) => {\r\n        navigator.geolocation.getCurrentPosition(\r\n          (pos) => {\r\n            resolve(pos); // Resolve the Promise with the GeolocationPosition object\r\n          },\r\n          (err: GeolocationPositionError) => {\r\n            // Reject the Promise with our custom Error instance\r\n            reject(new GeolocationServiceError(err.message, err.code));\r\n          },\r\n          { enableHighAccuracy: false, timeout: 8000, maximumAge: 0 } // Options for getCurrentPosition\r\n        );\r\n      });\r\n\r\n      setCoords(position.coords); // Update state with coordinates from the resolved Promise\r\n    } catch (err: unknown) { // Catch any errors (e.g., permission denied, timeout)\r\n      if (err instanceof GeolocationServiceError) { // Now safely check for our custom error\r\n        let errorMessage = 'Geolocation error: ';\r\n        switch (err.code) { // Access the code property safely\r\n          case GeolocationPositionError.PERMISSION_DENIED:\r\n            errorMessage += 'Permission denied to access location.';\r\n            break;\r\n          case GeolocationPositionError.POSITION_UNAVAILABLE:\r\n            errorMessage += 'Location information is unavailable.';\r\n            break;\r\n          case GeolocationPositionError.TIMEOUT:\r\n            errorMessage += 'The request to get user location timed out.';\r\n            break;\r\n          default:\r\n            errorMessage += err.message; // Use the message from our custom error\r\n            break;\r\n        }\r\n        setError(errorMessage);\r\n      } else if (err instanceof Error) {\r\n        // Fallback for other standard Error objects\r\n        setError(`An unexpected error occurred: ${err.message}`);\r\n      } else {\r\n        // Fallback for truly unknown error types\r\n        setError('An unknown geolocation error occurred.');\r\n      }\r\n      console.error(\"Geolocation request failed:\", err);\r\n    }\r\n  }\r\n\r\n  return { coords, error, request };\r\n}"],"names":[],"mappings":"AAAA,8BAA8B;;;;AAC9B;;AAEA,qDAAqD;AACrD,MAAM,gCAAgC;IACpC,KAAa;IAEb,YAAY,OAAe,EAAE,IAAY,CAAE;QACzC,KAAK,CAAC;QACN,IAAI,CAAC,IAAI,GAAG,2BAA2B,oCAAoC;QAC3E,IAAI,CAAC,IAAI,GAAG;QACZ,gHAAgH;QAChH,OAAO,cAAc,CAAC,IAAI,EAAE,wBAAwB,SAAS;IAC/D;AACF;AAEO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiC;IACpE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,eAAe;QACb,SAAS,OAAO,uDAAuD;QACvE,UAAU,OAAO,yCAAyC;QAE1D,IAAI,CAAC,UAAU,WAAW,EAAE;YAC1B,SAAS;YACT,QAAQ,uCAAuC;QACjD;QAEA,IAAI;YACF,0DAA0D;YAC1D,MAAM,WAAW,MAAM,IAAI,QAA6B,CAAC,SAAS;gBAChE,UAAU,WAAW,CAAC,kBAAkB,CACtC,CAAC;oBACC,QAAQ,MAAM,0DAA0D;gBAC1E,GACA,CAAC;oBACC,oDAAoD;oBACpD,OAAO,IAAI,wBAAwB,IAAI,OAAO,EAAE,IAAI,IAAI;gBAC1D,GACA;oBAAE,oBAAoB;oBAAO,SAAS;oBAAM,YAAY;gBAAE,EAAE,iCAAiC;;YAEjG;YAEA,UAAU,SAAS,MAAM,GAAG,0DAA0D;QACxF,EAAE,OAAO,KAAc;YACrB,IAAI,eAAe,yBAAyB;gBAC1C,IAAI,eAAe;gBACnB,OAAQ,IAAI,IAAI;oBACd,KAAK,yBAAyB,iBAAiB;wBAC7C,gBAAgB;wBAChB;oBACF,KAAK,yBAAyB,oBAAoB;wBAChD,gBAAgB;wBAChB;oBACF,KAAK,yBAAyB,OAAO;wBACnC,gBAAgB;wBAChB;oBACF;wBACE,gBAAgB,IAAI,OAAO,EAAE,wCAAwC;wBACrE;gBACJ;gBACA,SAAS;YACX,OAAO,IAAI,eAAe,OAAO;gBAC/B,4CAA4C;gBAC5C,SAAS,CAAC,8BAA8B,EAAE,IAAI,OAAO,EAAE;YACzD,OAAO;gBACL,yCAAyC;gBACzC,SAAS;YACX;YACA,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,OAAO;QAAE;QAAQ;QAAO;IAAQ;AAClC","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/components/SearchBar.tsx"],"sourcesContent":["// src/components/SearchBar.tsx\r\n'use client';\r\nimport { useState } from 'react';\r\nimport { useGeoPosition } from '@/hooks/useGeoPosition'; // Assuming this hook exists and is correct\r\n\r\ninterface Props {\r\n  onSearch: (query: string, location: string) => void;\r\n  onLocate: (lat: number, lon: number, query: string) => void;\r\n  initialQuery?: string;\r\n  initialLocation?: string;\r\n}\r\n\r\nexport default function SearchBar({\r\n  onSearch,\r\n  onLocate,\r\n  initialQuery = '',\r\n  initialLocation = '',\r\n}: Props) {\r\n  const [query, setQuery] = useState(initialQuery);\r\n  const [location, setLocation] = useState(initialLocation);\r\n  const { coords, request } = useGeoPosition(); // Assuming request is an async function\r\n\r\n  return (\r\n    <div className=\"flex flex-col sm:flex-row gap-2\">\r\n      <input\r\n        value={query}\r\n        onChange={e => setQuery(e.target.value)}\r\n        placeholder=\"What?\"\r\n        className=\"h-10 flex-1 border p-2 rounded bg-white text-gray-900 dark:bg-gray-800 dark:text-gray-100\"\r\n      />\r\n      <input\r\n        value={location}\r\n        onChange={e => setLocation(e.target.value)}\r\n        placeholder=\"Where?\"\r\n        className=\"h-10 flex-1 border p-2 rounded bg-white text-gray-900 dark:bg-gray-800 dark:text-gray-100\"\r\n      />\r\n      <button\r\n        onClick={() => {\r\n          if (!location.trim()) return;\r\n          onSearch(query, location);\r\n        }}\r\n        className=\"h-10 px-4 bg-indigo-600 text-white rounded\"\r\n        disabled={!query || !location}\r\n      >\r\n        Search\r\n      </button>\r\n      <button\r\n        // Refactored lines 48-51:\r\n        onClick={() => {\r\n          // Use `void` to explicitly tell TypeScript/ESLint that the returned Promise\r\n          // from this async IIFE is intentionally not handled/awaited here.\r\n          void (async () => {\r\n            if (!coords) {\r\n              await request(); // request() is presumably async and returns a Promise\r\n            }\r\n            // After request() might have updated coords, check again\r\n            if (coords) { // Still rely on the `coords` state directly from the hook\r\n              onLocate(coords.latitude, coords.longitude, query);\r\n            }\r\n          })(); // Immediately Invoked Async Function Expression\r\n        }}\r\n        className=\"h-10 px-3 bg-emerald-600 text-white rounded\"\r\n      >\r\n        Near me\r\n      </button>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAE/B;AACA,8NAAyD,2CAA2C;AAFpG;;;;AAWe,SAAS,UAAU,EAChC,QAAQ,EACR,QAAQ,EACR,eAAe,EAAE,EACjB,kBAAkB,EAAE,EACd;IACN,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8HAAA,CAAA,iBAAc,AAAD,KAAK,wCAAwC;IAEtF,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,OAAO;gBACP,UAAU,CAAA,IAAK,SAAS,EAAE,MAAM,CAAC,KAAK;gBACtC,aAAY;gBACZ,WAAU;;;;;;0BAEZ,8OAAC;gBACC,OAAO;gBACP,UAAU,CAAA,IAAK,YAAY,EAAE,MAAM,CAAC,KAAK;gBACzC,aAAY;gBACZ,WAAU;;;;;;0BAEZ,8OAAC;gBACC,SAAS;oBACP,IAAI,CAAC,SAAS,IAAI,IAAI;oBACtB,SAAS,OAAO;gBAClB;gBACA,WAAU;gBACV,UAAU,CAAC,SAAS,CAAC;0BACtB;;;;;;0BAGD,8OAAC;gBACC,0BAA0B;gBAC1B,SAAS;oBACP,4EAA4E;oBAC5E,kEAAkE;oBAClE,KAAK,CAAC;wBACJ,IAAI,CAAC,QAAQ;4BACX,MAAM,WAAW,sDAAsD;wBACzE;wBACA,yDAAyD;wBACzD,IAAI,QAAQ;4BACV,SAAS,OAAO,QAAQ,EAAE,OAAO,SAAS,EAAE;wBAC9C;oBACF,CAAC,KAAK,gDAAgD;gBACxD;gBACA,WAAU;0BACX;;;;;;;;;;;;AAKP","debugId":null}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/app/helpers/priceColor.ts"],"sourcesContent":["export function priceColor(price?: string) {\r\n   if (!price) return 'text-gray-500';\r\n\r\n  // Treat ¥¥ the same way as $$\r\n  const clean = price.replace(/[¥￥€]/g, '$');\r\n  switch (clean) {\r\n    case '$':   return 'text-emerald-600';  // inexpensive\r\n    case '$$':  return 'text-amber-600';    // moderate\r\n    case '$$$': return 'text-rose-600';     // pricey\r\n    default:    return 'text-gray-500';\r\n  }\r\n}"],"names":[],"mappings":";;;AAAO,SAAS,WAAW,KAAc;IACtC,IAAI,CAAC,OAAO,OAAO;IAEpB,8BAA8B;IAC9B,MAAM,QAAQ,MAAM,OAAO,CAAC,UAAU;IACtC,OAAQ;QACN,KAAK;YAAO,OAAO,oBAAqB,cAAc;QACtD,KAAK;YAAO,OAAO,kBAAqB,WAAW;QACnD,KAAK;YAAO,OAAO,iBAAqB,SAAS;QACjD;YAAY,OAAO;IACrB;AACF","debugId":null}},
    {"offset": {"line": 200, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/lib/wishlist.ts"],"sourcesContent":["// src/lib/wishlist.ts\r\nimport { doc, setDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\nexport async function addToWishlist(uid: string, bizId: string) {\r\n  const ref = doc(db, 'wishlists', uid, 'items', bizId);\r\n  await setDoc(ref, { addedAt: Date.now() });\r\n}\r\n\r\nexport async function removeFromWishlist(uid: string, bizId: string) {\r\n  const ref = doc(db, 'wishlists', uid, 'items', bizId);\r\n  await deleteDoc(ref);\r\n}\r\n"],"names":[],"mappings":"AAAA,sBAAsB;;;;;AACtB;AAAA;AACA;;;AAEO,eAAe,cAAc,GAAW,EAAE,KAAa;IAC5D,MAAM,MAAM,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa,KAAK,SAAS;IAC/C,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE,KAAK;QAAE,SAAS,KAAK,GAAG;IAAG;AAC1C;AAEO,eAAe,mBAAmB,GAAW,EAAE,KAAa;IACjE,MAAM,MAAM,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,aAAa,KAAK,SAAS;IAC/C,MAAM,CAAA,GAAA,iKAAA,CAAA,YAAS,AAAD,EAAE;AAClB","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/components/RestaurantCard.tsx"],"sourcesContent":["// src/components/RestaurantCard.tsx\r\nimport Image from 'next/image';\r\nimport { Star, StarHalf } from 'lucide-react'; // Simplified Star import\r\nimport { priceColor } from '@/app/helpers/priceColor'; // Refactored import path\r\nimport { toast } from 'react-hot-toast';\r\nimport { addToWishlist } from '@/lib/wishlist';\r\nimport { useUser } from './AuthProvider';\r\nimport { useState } from 'react'; // Import useState for local loading state\r\n\r\ntype Props = {\r\n  id: string;\r\n  name: string;\r\n  rating: number;\r\n  price?: string;\r\n  category: string;\r\n  photoUrl?: string;\r\n};\r\n\r\nfunction SaveButton({ bizId }: { bizId: string }) {\r\n  const { user, loading: authLoading } = useUser();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n\r\n  if (authLoading || !user) {\r\n    return null;\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    setIsSaving(true);\r\n    try {\r\n      await addToWishlist(user.uid, bizId);\r\n      toast.success('Added to wishlist!');\r\n    } catch (err) {\r\n      toast.error('Could not save, try again.');\r\n      console.error('Error adding to wishlist:', err);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      // Refactored line here:\r\n      onClick={() => { void handleSave(); }} // Use `void` to explicitly ignore the Promise return\r\n      className=\"ml-2 text-xs text-indigo-600 hover:underline disabled:opacity-50 disabled:cursor-not-allowed\"\r\n      disabled={isSaving}\r\n    >\r\n      {isSaving ? 'Saving...' : 'Save'}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Stars({ rating }: { rating: number }) {\r\n  const filled = Math.floor(rating);\r\n  const half = rating % 1 >= 0.5 ? 1 : 0;\r\n  const empty = 5 - filled - half;\r\n\r\n  return (\r\n    <span className=\"inline-flex\">\r\n      {Array.from({ length: filled }).map((_, i) => <Star key={`f${i}`} size={16} />)}\r\n      {half === 1 && <StarHalf size={16} />}\r\n      {Array.from({ length: empty }).map((_, i) => (\r\n        // Use Star directly, applying opacity for outlined appearance\r\n        <Star key={`o${i}`} size={16} className=\"opacity-40\" />\r\n      ))}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default function RestaurantCard({\r\n  id,\r\n  name,\r\n  rating,\r\n  price,\r\n  category,\r\n  photoUrl,\r\n}: Props) {\r\n  return (\r\n    <article className=\"flex flex-col h-full rounded-xl border shadow transition\"\r\n      data-testid=\"restaurant-card\"\r\n    >\r\n      {/* thumbnail */}\r\n      <div className=\"relative h-32 sm:h-40 w-full\">\r\n        <Image\r\n          src={photoUrl ?? '/placeholder.png'}\r\n          alt={name}\r\n          fill={true}\r\n          className=\"rounded-t-xl object-cover\"\r\n          sizes=\"(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 33vw\"\r\n        />\r\n      </div>\r\n\r\n      {/* text */}\r\n      <div className=\"flex-1 p-3 flex flex-col justify-between\">\r\n        <div className=\"flex items-start\">\r\n          <h3 className=\"font-semibold flex-1 text-gray-900 dark:text-gray-100\">\r\n            {name}\r\n          </h3>\r\n          <SaveButton bizId={id} />\r\n        </div>\r\n\r\n        <p className=\"text-sm text-gray-600 dark:text-gray-300 mt-1\">\r\n          <Stars rating={rating} /> {rating.toFixed(1)} •\r\n          <span className={priceColor(price) + ' dark:opacity-90'}>\r\n            {price ?? '?'}\r\n          </span>\r\n          &nbsp;• {category}\r\n        </p>\r\n      </div>\r\n    </article>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,oCAAoC;;;;;AACpC;AACA,gVAA+C,yBAAyB;AAAxE;AACA,qOAAuD,yBAAyB;AAChF;AACA;AACA;AACA,oVAAkC,0CAA0C;;;;;;;;;AAW5E,SAAS,WAAW,EAAE,KAAK,EAAqB;IAC9C,MAAM,EAAE,IAAI,EAAE,SAAS,WAAW,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,IAAI,eAAe,CAAC,MAAM;QACxB,OAAO;IACT;IAEA,MAAM,aAAa;QACjB,YAAY;QACZ,IAAI;YACF,MAAM,CAAA,GAAA,sHAAA,CAAA,gBAAa,AAAD,EAAE,KAAK,GAAG,EAAE;YAC9B,uJAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QAChB,EAAE,OAAO,KAAK;YACZ,uJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ,QAAQ,KAAK,CAAC,6BAA6B;QAC7C,SAAU;YACR,YAAY;QACd;IACF;IAEA,qBACE,8OAAC;QACC,wBAAwB;QACxB,SAAS;YAAQ,KAAK;QAAc;QACpC,WAAU;QACV,UAAU;kBAET,WAAW,cAAc;;;;;;AAGhC;AAEA,SAAS,MAAM,EAAE,MAAM,EAAsB;IAC3C,MAAM,SAAS,KAAK,KAAK,CAAC;IAC1B,MAAM,OAAO,SAAS,KAAK,MAAM,IAAI;IACrC,MAAM,QAAQ,IAAI,SAAS;IAE3B,qBACE,8OAAC;QAAK,WAAU;;YACb,MAAM,IAAI,CAAC;gBAAE,QAAQ;YAAO,GAAG,GAAG,CAAC,CAAC,GAAG,kBAAM,8OAAC,kMAAA,CAAA,OAAI;oBAAe,MAAM;mBAAf,CAAC,CAAC,EAAE,GAAG;;;;;YAC/D,SAAS,mBAAK,8OAAC,8MAAA,CAAA,WAAQ;gBAAC,MAAM;;;;;;YAC9B,MAAM,IAAI,CAAC;gBAAE,QAAQ;YAAM,GAAG,GAAG,CAAC,CAAC,GAAG,IACrC,8DAA8D;8BAC9D,8OAAC,kMAAA,CAAA,OAAI;oBAAe,MAAM;oBAAI,WAAU;mBAA7B,CAAC,CAAC,EAAE,GAAG;;;;;;;;;;;AAI1B;AAEe,SAAS,eAAe,EACrC,EAAE,EACF,IAAI,EACJ,MAAM,EACN,KAAK,EACL,QAAQ,EACR,QAAQ,EACF;IACN,qBACE,8OAAC;QAAQ,WAAU;QACjB,eAAY;;0BAGZ,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,YAAY;oBACjB,KAAK;oBACL,MAAM;oBACN,WAAU;oBACV,OAAM;;;;;;;;;;;0BAKV,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CACX;;;;;;0CAEH,8OAAC;gCAAW,OAAO;;;;;;;;;;;;kCAGrB,8OAAC;wBAAE,WAAU;;0CACX,8OAAC;gCAAM,QAAQ;;;;;;4BAAU;4BAAE,OAAO,OAAO,CAAC;4BAAG;0CAC7C,8OAAC;gCAAK,WAAW,CAAA,GAAA,mIAAA,CAAA,aAAU,AAAD,EAAE,SAAS;0CAClC,SAAS;;;;;;4BACL;4BACE;;;;;;;;;;;;;;;;;;;AAKnB","debugId":null}},
    {"offset": {"line": 418, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/lib/searchClient.ts"],"sourcesContent":["// src/lib/searchClient.ts\r\n\r\n// Make sure your Business interface is accessible, e.g.:\r\nimport { Business } from './foursquareCached'; // Or from a central types file\r\n\r\n// Your existing SearchParams interface\r\nexport interface SearchParams {\r\n  term?: string;\r\n  location?: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n  price?: string; // Consider if this should be a number or string based on API\r\n  categories?: string;\r\n  limit?: number;\r\n  offset?: number;\r\n}\r\n\r\n// --- New: Define API Response Interfaces ---\r\n\r\n// Interface for a successful search API response\r\n// Adjust 'businesses' property name and type if your API returns something different\r\nexport interface SearchApiResponse {\r\n  businesses: Business[]; // Assuming 'Business' interface is defined elsewhere\r\n  // Add other properties if your API response includes them (e.g., total, region)\r\n  total?: number;\r\n}\r\n\r\n// Interface for an API error response\r\n// Adjust 'error' property name and type if your API returns something different for errors\r\ninterface SearchApiErrorResponse {\r\n  error?: string; // Common for a simple error message\r\n  message?: string; // Some APIs use 'message' for errors\r\n  statusCode?: number;\r\n  // Add other properties if your API error response includes them\r\n}\r\n\r\n/**\r\n * Performs a search against your Next.js API endpoint, which then\r\n * presumably calls an external service like Foursquare.\r\n * @param params Search parameters.\r\n * @returns A Promise that resolves to an array of Business objects.\r\n */\r\nexport async function searchFoursquare(params: SearchParams): Promise<Business[]> {\r\n  const url = new URL('/api/search', window.location.origin);\r\n\r\n  Object.entries(params).forEach(([k, v]) => {\r\n    if (v !== undefined && v !== '') {\r\n      url.searchParams.set(k, String(v));\r\n    }\r\n  });\r\n\r\n  console.log(\"searchFoursquare: Calling API with URL:\", url.toString());\r\n\r\n  const res = await fetch(url.toString());\r\n\r\n  if (!res.ok) {\r\n    let errorMessage = `API error: ${res.status} ${res.statusText}`;\r\n    try {\r\n      // Explicitly type the error response body\r\n      const errorBody = (await res.json()) as SearchApiErrorResponse;\r\n\r\n      // Access properties safely using optional chaining or nullish coalescing\r\n      if (errorBody?.error) {\r\n        errorMessage += ` - Details: ${errorBody.error}`;\r\n      } else if (errorBody?.message) { // Check for a 'message' property\r\n        errorMessage += ` - Details: ${errorBody.message}`;\r\n      } else if (Object.keys(errorBody).length > 0) { // Fallback if no specific error property but object exists\r\n        errorMessage += ` - Body: ${JSON.stringify(errorBody)}`;\r\n      }\r\n    } catch (e: unknown) { // Use 'unknown' for catch block errors\r\n      console.warn(\"searchFoursquare: Could not parse error response body as JSON.\", e);\r\n      errorMessage += ` - Could not parse error response body. Original error: ${e instanceof Error ? e.message : String(e)}`;\r\n    }\r\n    console.error(\"searchFoursquare: Fetch failed with error:\", errorMessage);\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  try {\r\n    // Explicitly type the successful data response\r\n    const data = (await res.json()) as SearchApiResponse;\r\n    console.log(\"searchFoursquare: Received data:\", data);\r\n\r\n    // Ensure data.businesses exists and is an array before returning\r\n    if (!data.businesses || !Array.isArray(data.businesses)) {\r\n      throw new Error(\"API response is missing 'businesses' array or it's not an array.\");\r\n    }\r\n    return data.businesses;\r\n  } catch (e: unknown) { // Use 'unknown' for catch block errors\r\n    console.error(\"searchFoursquare: Error parsing JSON response:\", e);\r\n    // Safely access error message\r\n    const errorMessage = e instanceof Error ? e.message : String(e);\r\n    throw new Error(\"Invalid JSON response from API. Details: \" + errorMessage);\r\n  }\r\n}"],"names":[],"mappings":"AAAA,0BAA0B;AAE1B,yDAAyD;;;;AAwClD,eAAe,iBAAiB,MAAoB;IACzD,MAAM,MAAM,IAAI,IAAI,eAAe,OAAO,QAAQ,CAAC,MAAM;IAEzD,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC,GAAG,EAAE;QACpC,IAAI,MAAM,aAAa,MAAM,IAAI;YAC/B,IAAI,YAAY,CAAC,GAAG,CAAC,GAAG,OAAO;QACjC;IACF;IAEA,QAAQ,GAAG,CAAC,2CAA2C,IAAI,QAAQ;IAEnE,MAAM,MAAM,MAAM,MAAM,IAAI,QAAQ;IAEpC,IAAI,CAAC,IAAI,EAAE,EAAE;QACX,IAAI,eAAe,CAAC,WAAW,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,IAAI,UAAU,EAAE;QAC/D,IAAI;YACF,0CAA0C;YAC1C,MAAM,YAAa,MAAM,IAAI,IAAI;YAEjC,yEAAyE;YACzE,IAAI,WAAW,OAAO;gBACpB,gBAAgB,CAAC,YAAY,EAAE,UAAU,KAAK,EAAE;YAClD,OAAO,IAAI,WAAW,SAAS;gBAC7B,gBAAgB,CAAC,YAAY,EAAE,UAAU,OAAO,EAAE;YACpD,OAAO,IAAI,OAAO,IAAI,CAAC,WAAW,MAAM,GAAG,GAAG;gBAC5C,gBAAgB,CAAC,SAAS,EAAE,KAAK,SAAS,CAAC,YAAY;YACzD;QACF,EAAE,OAAO,GAAY;YACnB,QAAQ,IAAI,CAAC,kEAAkE;YAC/E,gBAAgB,CAAC,wDAAwD,EAAE,aAAa,QAAQ,EAAE,OAAO,GAAG,OAAO,IAAI;QACzH;QACA,QAAQ,KAAK,CAAC,8CAA8C;QAC5D,MAAM,IAAI,MAAM;IAClB;IAEA,IAAI;QACF,+CAA+C;QAC/C,MAAM,OAAQ,MAAM,IAAI,IAAI;QAC5B,QAAQ,GAAG,CAAC,oCAAoC;QAEhD,iEAAiE;QACjE,IAAI,CAAC,KAAK,UAAU,IAAI,CAAC,MAAM,OAAO,CAAC,KAAK,UAAU,GAAG;YACvD,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,KAAK,UAAU;IACxB,EAAE,OAAO,GAAY;QACnB,QAAQ,KAAK,CAAC,kDAAkD;QAChE,8BAA8B;QAC9B,MAAM,eAAe,aAAa,QAAQ,EAAE,OAAO,GAAG,OAAO;QAC7D,MAAM,IAAI,MAAM,8CAA8C;IAChE;AACF","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/app/SearchPageClient.tsx"],"sourcesContent":["// src/app/SearchPageClient.tsx\r\n'use client';\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useRouter, useSearchParams } from 'next/navigation';\r\nimport SearchBar from '@/components/SearchBar';\r\nimport RestaurantCard from '@/components/RestaurantCard';\r\nimport { searchFoursquare } from '@/lib/searchClient';\r\n\r\n/* ------------- */\r\n/* Type helpers  */\r\n/* --------------*/\r\ninterface Business {\r\n  id: string;\r\n  name: string;\r\n  rating: number;\r\n  price?: string;\r\n  category: string;\r\n  photoUrl?: string;\r\n}\r\ninterface FoursquareSearchOpts {\r\n  term?: string;\r\n  location?: string;\r\n  latitude?: number;\r\n  longitude?: number;\r\n  price?: string;\r\n  categories?: string;\r\n}\r\n\r\n/* ------------------------------------------------------------------------------------------ */\r\n/* Debounce Helper Function (as corrected in previous turn, to avoid TypeScript 'any' errors) */\r\n/* ------------------------------------------------------------------------------------------ */\r\nfunction debounce<TArgs extends unknown[], TReturn>(\r\n  func: (...args: TArgs) => TReturn,\r\n  delay: number\r\n): (...args: TArgs) => void {\r\n  let timeoutId: NodeJS.Timeout | null = null;\r\n  return function(this: ThisParameterType<typeof func>, ...args: TArgs) {\r\n    if (timeoutId) {\r\n      clearTimeout(timeoutId);\r\n    }\r\n    timeoutId = setTimeout(() => {\r\n      func.apply(this, args);\r\n      timeoutId = null;\r\n    }, delay);\r\n  };\r\n}\r\n\r\n/* ------------------------------------------------------------------ */\r\n/* Component                                                          */\r\n/* ------------------------------------------------------------------ */\r\nexport default function SearchPageClient() {\r\n  const params = useSearchParams();\r\n  const router = useRouter();\r\n\r\n  // ---------------- state ----------------\r\n  const [results, setResults] = useState<Business[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [lastQuery, setLastQuery] = useState('restaurants');\r\n  const [query, setQuery] = useState(() => params.get('term') ?? '');\r\n  const [location, setLocation] = useState(() => params.get('location') ?? '');\r\n  const [selectedPrices, setSelectedPrices] = useState<string[]>([]);\r\n  const [selectedCats, setSelectedCats] = useState<string[]>([]);\r\n  const [error, setError] = useState<string | null>(null); // 'error' state is now used!\r\n  const [mounted, setMounted] = useState(false); // New state variable\r\n\r\n  useEffect(() => {\r\n    setMounted(true); // Set to true once the component mounts on the client\r\n  }, []);\r\n\r\n  // ---------------- effects ----------------\r\n  const fetchResultsCore = useCallback(async (query: string, opts: FoursquareSearchOpts = {}) => {\r\n    setError(null); // Clear any previous errors at the start of a new search\r\n    setLoading(true);\r\n    try {\r\n      console.log('fetchResultsCore: Preparing to search with query:', query, 'and opts:', opts);\r\n      const data = await searchFoursquare({\r\n        term: query,\r\n        ...opts,\r\n        price: selectedPrices.join(',') || undefined,\r\n        categories: selectedCats.join(',') || undefined,\r\n      });\r\n      setResults(data);\r\n      console.log('fetchResultsCore: Received successful data:', data);\r\n    } catch (err: unknown) { // Use 'unknown' for better type safety in catch\r\n      console.error('fetchResultsCore: Error during search operation:', err);\r\n      setResults([]); // Clear results on error\r\n      // --- FIX: Use setError here ---\r\n      setError(`Search failed: ${err instanceof Error ? err.message : String(err)}`);\r\n    } finally {\r\n      setLoading(false); // Always clear loading state\r\n    }\r\n  }, [selectedPrices, selectedCats]); // Dependencies for useCallback: selectedPrices, selectedCats\r\n\r\n  const debouncedFetchResults = useRef(\r\n    debounce((query: string, opts?: FoursquareSearchOpts) => {\r\n      // The promise returned by fetchResultsCore is handled internally\r\n      // by its try...catch block, so `void` operator is appropriate here\r\n      // to explicitly indicate we're not awaiting or chaining further.\r\n      void fetchResultsCore(query, opts);\r\n    }, 500)\r\n  ).current;\r\n\r\n  useEffect(() => {\r\n    const currentQuery = params.get('term') ?? '';\r\n    const currentLocation = params.get('location') ?? '';\r\n    const currentPrices = params.getAll('price') || [];\r\n    const currentCategories = params.getAll('categories') || [];\r\n\r\n    // Update states from URL params\r\n    setQuery(currentQuery);\r\n    setLocation(currentLocation);\r\n    setSelectedPrices(currentPrices);\r\n    setSelectedCats(currentCategories);\r\n    setLastQuery(currentQuery || 'restaurants');\r\n\r\n    console.log(\"useEffect: currentTerm:\", currentQuery, \"currentLocation:\", currentLocation);\r\n\r\n    if (!currentQuery && !currentLocation && !params.get('latitude') && !params.get('longitude')) {\r\n      console.log(\"useEffect: No search parameters found in URL, not initiating search.\");\r\n      setResults([]); // Ensure results are clear if no search parameters\r\n      setError(null); // Ensure no old error is shown\r\n      return;\r\n    }\r\n\r\n    const hasLocationData = currentLocation || (params.get('latitude') && params.get('longitude'));\r\n\r\n    if (currentQuery && hasLocationData) {\r\n      console.log(\"useEffect: Initiating debounced search with term:\", currentQuery, \"location data present.\");\r\n      const opts: FoursquareSearchOpts = {};\r\n      if (currentLocation) opts.location = currentLocation;\r\n      if (params.get('latitude') && params.get('longitude')) {\r\n        opts.latitude = Number(params.get('latitude'));\r\n        opts.longitude = Number(params.get('longitude'));\r\n      }\r\n      // Calling the debounced function, which then calls fetchResultsCore\r\n      // The promise handling is inside fetchResultsCore, so `void` is okay here.\r\n      void debouncedFetchResults(currentQuery, opts);\r\n    } else if (currentQuery && !hasLocationData) {\r\n      console.log(\"useEffect: Term present but no location data. Not initiating full search.\");\r\n      // You might want to display a message to the user here, e.g., \"Please enter a location.\"\r\n      // setError('Please provide a location or enable location services to search.');\r\n    }\r\n  }, [params, debouncedFetchResults]); // Dependencies: router is not needed as a dependency here if not directly used to trigger effect\r\n\r\n  // ---------------- handlers ----------------\r\n  const togglePrice = (price: string) => {\r\n    const newPrices = selectedPrices.includes(price)\r\n      ? selectedPrices.filter(p => p !== price)\r\n      : [...selectedPrices, price];\r\n    setSelectedPrices(newPrices);\r\n    const newParams = new URLSearchParams(params.toString());\r\n    // Clear all existing 'price' params before adding new ones\r\n    params.getAll('price').forEach(p => newParams.delete('price', p));\r\n    newPrices.forEach(p => newParams.append('price', p));\r\n\r\n    // Ensure query and location are preserved if they exist\r\n    if (query) newParams.set('term', query);\r\n    if (location) newParams.set('location', location);\r\n    // Preserve lat/lon if present\r\n    if (params.get('latitude')) newParams.set('latitude', params.get('latitude')!);\r\n    if (params.get('longitude')) newParams.set('longitude', params.get('longitude')!);\r\n\r\n    router.replace(`/?${newParams.toString()}`);\r\n  };\r\n\r\n  const toggleCategory = (category: string) => {\r\n    const newCats = selectedCats.includes(category)\r\n      ? selectedCats.filter(c => c !== category)\r\n      : [...selectedCats, category];\r\n    setSelectedCats(newCats);\r\n    const newParams = new URLSearchParams(params.toString());\r\n    // Clear all existing 'categories' params before adding new ones\r\n    params.getAll('categories').forEach(c => newParams.delete('categories', c));\r\n    newCats.forEach(c => newParams.append('categories', c));\r\n\r\n    // Ensure query and location are preserved if they exist\r\n    if (query) newParams.set('term', query);\r\n    if (location) newParams.set('location', location);\r\n    // Preserve lat/lon if present\r\n    if (params.get('latitude')) newParams.set('latitude', params.get('latitude')!);\r\n    if (params.get('longitude')) newParams.set('longitude', params.get('longitude')!);\r\n\r\n    router.replace(`/?${newParams.toString()}`);\r\n  };\r\n\r\n  const handleSearch = (newQuery: string, newLocation: string) => {\r\n    setQuery(newQuery);\r\n    setLocation(newLocation);\r\n    const newParams = new URLSearchParams();\r\n    if (newQuery) newParams.set('term', newQuery);\r\n    if (newLocation) newParams.set('location', newLocation);\r\n    selectedPrices.forEach(p => newParams.append('price', p));\r\n    selectedCats.forEach(c => newParams.append('categories', c));\r\n    router.replace(`/?${newParams.toString()}`);\r\n  };\r\n\r\n  const handleLocate = (lat: number, lon: number, newQuery: string) => {\r\n    setQuery(newQuery);\r\n    setLocation(''); // Clear location text if using geo-coordinates\r\n    const newParams = new URLSearchParams();\r\n    if (newQuery) newParams.set('term', newQuery);\r\n    newParams.set('latitude', lat.toString());\r\n    newParams.set('longitude', lon.toString());\r\n    selectedPrices.forEach(p => newParams.append('price', p));\r\n    selectedCats.forEach(c => newParams.append('categories', c));\r\n    router.replace(`/?${newParams.toString()}`);\r\n  };\r\n\r\n  return (\r\n    <main className=\"container flex flex-col pt-4 pb-12\">\r\n      <h2 className=\"text-3xl font-bold text-center mb-6\">\r\n        Find your next favorite spot\r\n      </h2>\r\n      <SearchBar\r\n        onSearch={handleSearch}\r\n        onLocate={handleLocate}\r\n        initialQuery={query}\r\n        initialLocation={location}\r\n      />\r\n      {/* category/price filters */}\r\n      <div className=\"my-6 flex gap-2 justify-center flex-wrap\">\r\n        {['1', '2', '3', '4'].map(p => (\r\n          <button\r\n            key={p}\r\n            onClick={() => togglePrice(p)}\r\n            className={`px-3 py-1 rounded border\r\n                        ${selectedPrices.includes(p)\r\n                            ? 'bg-gray-900 text-white dark:bg-gray-100 dark:text-gray-900'\r\n                            : 'bg-gray-200 dark:bg-gray-700'}`}>\r\n            {'$'.repeat(Number(p))}\r\n          </button>\r\n        ))}\r\n        {[\r\n          { id: '13000', name: 'Pizza' },\r\n          { id: '13065', name: 'Thai' },\r\n          { id: '13035', name: 'Coffee Shop' },\r\n          { id: '13028', name: 'Mexican' },\r\n          { id: '13064', name: 'Sushi' },\r\n          { id: '13049', name: 'Burger' },\r\n        ].map(cat => (\r\n          <button\r\n            key={cat.id}\r\n            onClick={() => toggleCategory(cat.id)}\r\n            className={`px-3 py-1 rounded border capitalize\r\n                        ${selectedCats.includes(cat.id)\r\n                            ? 'bg-indigo-600 text-white'\r\n                            : 'bg-gray-200 dark:bg-gray-700'}`}>\r\n            {cat.name} {/* Display the human-readable name */}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      {/* results */}\r\n      {/* Conditionally render based on loading, errors, and results */}\r\n      {loading && <p className=\"text-center py-10 text-gray-500\">Loading…</p>}\r\n      {/* --- FIX: Display error message --- */}\r\n      {error && <p className=\"text-center py-10 text-red-500\">{error}</p>}\r\n      {/* This block handles showing the main results OR the \"No results\" message */}\r\n      {mounted && !loading && !error && ( // Only show results if not loading AND no error\r\n        <>\r\n          {results.length > 0 ? (\r\n            <section className=\"grid gap-6 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3\">\r\n              {results.map(biz => (\r\n                <RestaurantCard\r\n                  key={biz.id}\r\n                  id={biz.id}\r\n                  name={biz.name}\r\n                  rating={biz.rating}\r\n                  price={biz.price}\r\n                  category={biz.category ?? 'N/A'}\r\n                  photoUrl={biz.photoUrl}\r\n                />\r\n              ))}\r\n            </section>\r\n          ) : (\r\n            <p className=\"text-center py-10 text-gray-500\">\r\n              No results for “{lastQuery}”.\r\n            </p>\r\n          )}\r\n        </>\r\n      )}\r\n      {/* This placeholder only shows during the initial server-render before hydration */}\r\n      {!mounted && <p className=\"text-center py-10 text-gray-500\">Loading content...</p>}\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}