{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp, getApps } from 'firebase/app';\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n};\r\n\r\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\nexport const auth = getAuth(app);\r\n\r\n// Check if window is defined (for client-side rendering) and if Cypress is running\r\nif (typeof window !== 'undefined' && window.Cypress) {\r\n  // Now, TypeScript knows about `firebase_auth_instance` and `Cypress` on `window`\r\n  window.firebase_auth_instance = auth;\r\n  console.log('Firebase auth instance exposed to window for Cypress.');\r\n}\r\n\r\nexport const google = new GoogleAuthProvider();\r\nexport const db = getFirestore(app);"],"names":[],"mappings":";;;;;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AACrD,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAE5B,mFAAmF;AACnF,uCAAqD;;AAIrD;AAEO,MAAM,SAAS,IAAI,wNAAA,CAAA,qBAAkB;AACrC,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/components/AuthProvider.tsx"],"sourcesContent":["// src/components/AuthProvider.tsx\r\n'use client';\r\nimport { onAuthStateChanged, User } from 'firebase/auth';\r\nimport { createContext, useContext, useEffect, useState } from 'react';\r\nimport { auth } from '@/lib/firebase'; // Assuming '@/lib/firebase' exports your auth instance\r\n\r\n// 1. Define the shape of the context value\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean; // Indicates if the initial auth state check is still in progress\r\n}\r\n\r\n// 2. Initialize context with a default value\r\n// Default: No user, and currently loading (checking auth state)\r\nconst AuthCtx = createContext<AuthContextType>({ user: null, loading: true });\r\n\r\n// 3. Custom hook to easily consume the auth context\r\nexport const useUser = () => useContext(AuthCtx);\r\n\r\nexport default function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true); // Start as true, as we need to check auth state\r\n\r\n  useEffect(() => {\r\n    // onAuthStateChanged returns an unsubscribe function that we can use for cleanup\r\n    const unsubscribe = onAuthStateChanged(auth, (firebaseUser) => {\r\n      // This callback fires when the auth state changes (initially, login, logout)\r\n      setUser(firebaseUser); // Update the user state\r\n      setLoading(false);    // Once we've received an auth state, we are no longer loading\r\n    }, (error) => {\r\n      // Optional: Add a callback for errors during auth state observation\r\n      // (though onAuthStateChanged rarely errors itself, more likely initialization issues)\r\n      console.error(\"Firebase AuthStateChanged error:\", error);\r\n      setUser(null); // Ensure user is null if an error occurs\r\n      setLoading(false); // Stop loading even if there's an error\r\n    });\r\n\r\n    // Cleanup function: Unsubscribe from the auth state listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []); // The `auth` object reference from '@/lib/firebase' is stable, so empty dependency array is appropriate.\r\n\r\n  // 4. The context value now includes both 'user' and 'loading'\r\n  const contextValue = { user, loading };\r\n\r\n  return (\r\n    <AuthCtx.Provider value={contextValue}>\r\n      {children}\r\n    </AuthCtx.Provider>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,kCAAkC;;;;;;AAElC;AAAA;AACA;AACA,8MAAuC,uDAAuD;AAH9F;;;;;AAWA,6CAA6C;AAC7C,gEAAgE;AAChE,MAAM,wBAAU,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAmB;IAAE,MAAM;IAAM,SAAS;AAAK;AAGpE,MAAM,UAAU,IAAM,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;AAEzB,SAAS,aAAa,EAAE,QAAQ,EAAiC;IAC9E,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,gDAAgD;IAE9F,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,iFAAiF;QACjF,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,sHAAA,CAAA,OAAI,EAAE,CAAC;YAC5C,6EAA6E;YAC7E,QAAQ,eAAe,wBAAwB;YAC/C,WAAW,QAAW,8DAA8D;QACtF,GAAG,CAAC;YACF,oEAAoE;YACpE,sFAAsF;YACtF,QAAQ,KAAK,CAAC,oCAAoC;YAClD,QAAQ,OAAO,yCAAyC;YACxD,WAAW,QAAQ,wCAAwC;QAC7D;QAEA,yFAAyF;QACzF,OAAO,IAAM;IACf,GAAG,EAAE,GAAG,yGAAyG;IAEjH,8DAA8D;IAC9D,MAAM,eAAe;QAAE;QAAM;IAAQ;IAErC,qBACE,8OAAC,QAAQ,QAAQ;QAAC,OAAO;kBACtB;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/components/SignInButton.tsx"],"sourcesContent":["// src/components/SignInButton.tsx\r\nimport { Dialog } from '@headlessui/react';\r\nimport { useState } from 'react';\r\nimport { signInWithPopup, signOut } from 'firebase/auth';\r\nimport { auth, google } from '@/lib/firebase';\r\nimport { useUser } from './AuthProvider';\r\nimport { toast } from 'react-hot-toast'; // Assuming you have toast imported\r\nimport { FirebaseError } from 'firebase/app'; // Import FirebaseError (usually from firebase/app)\r\n\r\nexport default function SignInButton() {\r\n  const { user, loading: authLoading } = useUser();\r\n  const [open, setOpen] = useState(false);\r\n  const [isSigningIn, setIsSigningIn] = useState(false);\r\n\r\n  /* ---- signed-in view ---- */\r\n  if (authLoading) {\r\n    return <span className=\"text-sm text-gray-500\">Loading user...</span>;\r\n  }\r\n\r\n  if (user) {\r\n    const handleSignOut = async () => {\r\n      try {\r\n        await signOut(auth);\r\n        // Optional: toast.success('Signed out successfully!');\r\n      } catch (error) {\r\n        console.error('Error signing out:', error);\r\n        // Optional: toast.error('Failed to sign out. Please try again.');\r\n      }\r\n    };\r\n\r\n    return (\r\n      <button\r\n        onClick={() => { void handleSignOut(); }}\r\n        className=\"text-sm hover:underline\"\r\n      >\r\n        Sign out ({user.displayName ?? user.email})\r\n      </button>\r\n    );\r\n  }\r\n\r\n  /* ---- signed-out view ---- */\r\n  const handleGoogleSignIn = async () => {\r\n    setIsSigningIn(true);\r\n    try {\r\n      await signInWithPopup(auth, google);\r\n      // Optional: toast.success('Signed in successfully!');\r\n      setOpen(false); // Close the dialog on successful sign-in\r\n    } catch (error: unknown) { // Best practice to type catch block as unknown\r\n      console.error('Error during Google sign-in:', error);\r\n\r\n      // Refactored line here:\r\n      if (error instanceof FirebaseError && error.code === 'auth/popup-closed-by-user') {\r\n        // Handle popup-closed-by-user specifically (e.g., no toast, or a different message)\r\n        // toast.error('Sign-in cancelled.');\r\n      } else {\r\n        // Provide a general error message for other Firebase errors or unknown errors\r\n        const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred.';\r\n        toast.error(`Sign-in failed: ${errorMessage}`);\r\n      }\r\n    } finally {\r\n      setIsSigningIn(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        onClick={() => setOpen(true)}\r\n        className=\"text-sm bg-indigo-600 text-white px-3 py-1 rounded\"\r\n      >\r\n        Sign in\r\n      </button>\r\n\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        className=\"fixed inset-0 z-50 flex items-center justify-center\"\r\n      >\r\n        {/* Backdrop — plain div, not Dialog.Backdrop */}\r\n        <div className=\"fixed inset-0 bg-black/40\" aria-hidden=\"true\" />\r\n\r\n        <Dialog.Panel className=\"relative w-80 rounded bg-white dark:bg-gray-900 p-6 shadow\">\r\n          <Dialog.Title className=\"text-lg font-bold mb-4\">\r\n            Sign in\r\n          </Dialog.Title>\r\n          <button\r\n            onClick={() => { void handleGoogleSignIn(); }}\r\n            className=\"w-full bg-emerald-600 text-white py-2 rounded disabled:opacity-50 disabled:cursor-not-allowed\"\r\n            disabled={isSigningIn}\r\n          >\r\n            {isSigningIn ? 'Signing In...' : 'Sign in with Google'}\r\n          </button>\r\n          <button\r\n            onClick={() => setOpen(false)}\r\n            className=\"absolute top-2 right-2 text-gray-500 hover:text-gray-800\"\r\n            aria-label=\"Close\"\r\n          >\r\n            ✕\r\n          </button>\r\n        </Dialog.Panel>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAClC;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA,uQAAyC,mCAAmC;AAC5E,8SAA8C,mDAAmD;AAAjG;;;;;;;;;AAEe,SAAS;IACtB,MAAM,EAAE,IAAI,EAAE,SAAS,WAAW,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC7C,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,4BAA4B,GAC5B,IAAI,aAAa;QACf,qBAAO,8OAAC;YAAK,WAAU;sBAAwB;;;;;;IACjD;IAEA,IAAI,MAAM;QACR,MAAM,gBAAgB;YACpB,IAAI;gBACF,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,sHAAA,CAAA,OAAI;YAClB,uDAAuD;YACzD,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,sBAAsB;YACpC,kEAAkE;YACpE;QACF;QAEA,qBACE,8OAAC;YACC,SAAS;gBAAQ,KAAK;YAAiB;YACvC,WAAU;;gBACX;gBACY,KAAK,WAAW,IAAI,KAAK,KAAK;gBAAC;;;;;;;IAGhD;IAEA,6BAA6B,GAC7B,MAAM,qBAAqB;QACzB,eAAe;QACf,IAAI;YACF,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,sHAAA,CAAA,OAAI,EAAE,sHAAA,CAAA,SAAM;YAClC,sDAAsD;YACtD,QAAQ,QAAQ,yCAAyC;QAC3D,EAAE,OAAO,OAAgB;YACvB,QAAQ,KAAK,CAAC,gCAAgC;YAE9C,wBAAwB;YACxB,IAAI,iBAAiB,iLAAA,CAAA,gBAAa,IAAI,MAAM,IAAI,KAAK,6BAA6B;YAChF,oFAAoF;YACpF,qCAAqC;YACvC,OAAO;gBACL,8EAA8E;gBAC9E,MAAM,eAAe,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBAC9D,uJAAA,CAAA,QAAK,CAAC,KAAK,CAAC,CAAC,gBAAgB,EAAE,cAAc;YAC/C;QACF,SAAU;YACR,eAAe;QACjB;IACF;IAEA,qBACE;;0BACE,8OAAC;gBACC,SAAS,IAAM,QAAQ;gBACvB,WAAU;0BACX;;;;;;0BAID,8OAAC,+KAAA,CAAA,SAAM;gBACL,MAAM;gBACN,SAAS,IAAM,QAAQ;gBACvB,WAAU;;kCAGV,8OAAC;wBAAI,WAAU;wBAA4B,eAAY;;;;;;kCAEvD,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;wBAAC,WAAU;;0CACtB,8OAAC,+KAAA,CAAA,SAAM,CAAC,KAAK;gCAAC,WAAU;0CAAyB;;;;;;0CAGjD,8OAAC;gCACC,SAAS;oCAAQ,KAAK;gCAAsB;gCAC5C,WAAU;gCACV,UAAU;0CAET,cAAc,kBAAkB;;;;;;0CAEnC,8OAAC;gCACC,SAAS,IAAM,QAAQ;gCACvB,WAAU;gCACV,cAAW;0CACZ;;;;;;;;;;;;;;;;;;;;AAOX","debugId":null}},
    {"offset": {"line": 419, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/components/MobileNav.tsx"],"sourcesContent":["// src/components/MobileNav.tsx\r\n'use client';\r\nimport { Disclosure } from '@headlessui/react';\r\nimport { Menu, X } from 'lucide-react';\r\nimport Link from 'next/link';\r\nimport SignInButton from './SignInButton';\r\nimport { useUser } from './AuthProvider';\r\n\r\nexport default function MobileNav() {\r\n  const user = useUser();\r\n\r\n  return (\r\n    <Disclosure as=\"nav\" className=\"sm:hidden border-b\">\r\n      {({ open }) => (\r\n        <>\r\n          <div className=\"flex items-center justify-between p-4\">\r\n            <Link href=\"/\" className=\"font-bold text-lg\">\r\n              Forkly\r\n            </Link>\r\n            <Disclosure.Button className=\"p-2 rounded\">\r\n              {open ? <X size={24} /> : <Menu size={24} />}\r\n            </Disclosure.Button>\r\n          </div>\r\n\r\n          <Disclosure.Panel className=\"space-y-2 px-4 pb-4\">\r\n            {user && <Link href=\"/wishlist\">Wishlist</Link>}\r\n            <SignInButton />\r\n          </Disclosure.Panel>\r\n        </>\r\n      )}\r\n    </Disclosure>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA,+BAA+B;;;;;AAE/B;AACA;AAAA;AACA;AACA;AACA;AALA;;;;;;;AAOe,SAAS;IACtB,MAAM,OAAO,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAEnB,qBACE,8OAAC,uLAAA,CAAA,aAAU;QAAC,IAAG;QAAM,WAAU;kBAC5B,CAAC,EAAE,IAAI,EAAE,iBACR;;kCACE,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;gCAAI,WAAU;0CAAoB;;;;;;0CAG7C,8OAAC,uLAAA,CAAA,aAAU,CAAC,MAAM;gCAAC,WAAU;0CAC1B,qBAAO,8OAAC,4LAAA,CAAA,IAAC;oCAAC,MAAM;;;;;yDAAS,8OAAC,kMAAA,CAAA,OAAI;oCAAC,MAAM;;;;;;;;;;;;;;;;;kCAI1C,8OAAC,uLAAA,CAAA,aAAU,CAAC,KAAK;wBAAC,WAAU;;4BACzB,sBAAQ,8OAAC,4JAAA,CAAA,UAAI;gCAAC,MAAK;0CAAY;;;;;;0CAChC,8OAAC,kIAAA,CAAA,UAAY;;;;;;;;;;;;;;;;;;AAMzB","debugId":null}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///D:/forkly/src/components/Header.tsx"],"sourcesContent":["'use client';\r\nimport Link from 'next/link';\r\nimport SignInButton from '@/components/SignInButton';\r\nimport { useUser } from '@/components/AuthProvider';\r\nimport MobileNav from '@/components/MobileNav';\r\n\r\nexport default function Header() {\r\n  const user = useUser();\r\n\r\n  return (\r\n    <header className=\"flex items-center justify-between p-4 border-b\">\r\n      <Link href=\"/\" className=\"font-bold text-lg\">\r\n        Forkly\r\n      </Link>\r\n\r\n      <nav className=\"hidden sm:flex items-center gap-4\">\r\n        {user && (\r\n          <Link href=\"/wishlist\" className=\"text-sm hover:underline\">\r\n            Wishlist\r\n          </Link>\r\n        )}\r\n        <SignInButton />\r\n      </nav>\r\n      <div className=\"sm:hidden\">\r\n        <MobileNav />\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAMe,SAAS;IACtB,MAAM,OAAO,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAEnB,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC,4JAAA,CAAA,UAAI;gBAAC,MAAK;gBAAI,WAAU;0BAAoB;;;;;;0BAI7C,8OAAC;gBAAI,WAAU;;oBACZ,sBACC,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAY,WAAU;kCAA0B;;;;;;kCAI7D,8OAAC,kIAAA,CAAA,UAAY;;;;;;;;;;;0BAEf,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,+HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;AAIlB","debugId":null}}]
}